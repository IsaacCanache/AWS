CREAR APLICACION EN SAM: PYTHON

CONFIGURAR IAM ROLES PARA USUARIO:

	OPERACIONES:

//lambda:InvokeFunction: Permite a AWS SAM CLI invocar tu función Lambda.
//cloudformation:CreateChangeSet: Permite a AWS SAM CLI crear un conjunto de cambios en CloudFormation, que es un resumen de los cambios propuestos para una pila.
//cloudformation:DescribeStacks: Permite a AWS SAM CLI obtener información sobre tus pilas existentes en CloudFormation.
//cloudformation:DescribeChangeSet: Permite a AWS SAM CLI obtener información sobre tus conjuntos de cambios en CloudFormation.
//cloudformation:ExecuteChangeSet: Permite a AWS SAM CLI ejecutar un conjunto de cambios en CloudFormation, lo que aplica los cambios propuestos a la pila.
//cloudformation:DeleteStack: Permite a AWS SAM CLI eliminar una pila en CloudFormation.
//cloudformation:DeleteChangeSet: Permite a AWS SAM CLI eliminar un conjunto de cambios en CloudFormation.
//s3:GetObject: Permite a AWS SAM CLI recuperar objetos desde tus buckets de S3.
//s3:PutObject: Permite a AWS SAM CLI cargar objetos a tus buckets de S3.

	PERMISOS EN GENERAL: 
	
//AWSLambdaFullAccess: Este permiso permite realizar todas las operaciones de Lambda.

//IAMFullAccess: Este permiso permite realizar todas las operaciones de IAM. Necesitarás este permiso para crear roles y políticas de IAM que tu función Lambda utilizará para interactuar con otros servicios de AWS.

//AmazonS3FullAccess: Este permiso permite realizar todas las operaciones en Amazon S3. Necesitarás este permiso para cargar tu código a un bucket de S3 durante la implementación.

//CloudFormationFullAccess: Este permiso permite realizar todas las operaciones en AWS CloudFormation. Necesitarás este permiso para crear, actualizar y eliminar pilas de CloudFormation.

//AmazonAPIGatewayAdministrator: Este permiso permite realizar todas las operaciones en Amazon API Gateway. Necesitarás este permiso si tu aplicación utiliza API Gateway.

//AWSCloudFormationReadOnlyAccess: Este permiso proporciona acceso de solo lectura a los recursos de AWS CloudFormation.

//AmazonDynamoDBFullAccess: Este permiso proporciona acceso completo a Amazon DynamoDB.

//CloudWatchLogsFullAccess: Este permiso proporciona acceso completo a Amazon CloudWatch Logs.

//AWSXrayWriteOnlyAccess: Este permiso proporciona acceso de escritura a AWS X-Ray.


CONFIGURE AWS CLI:
 sudo apt install awscli
aws configure

INSTALAR PYTHON
sudo apt-get update
sudo apt-get upgrade

sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
xz-utils tk-dev libffi-dev liblzma-dev python3-openssl git


wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz
tar -xvf Python-3.9.0.tgz

cd Python-3.9.0
./configure --enable-optimizations

make -j 8

INSTALR AWS SAM :
sudo apt-get install python3-pip -y
sudo -H python3 -m pip install aws-sam-cli
sam --version

INSTALAR DOCKER:

sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

sudo apt update

(opcional)
apt-cache policy docker-ce

sudo apt install docker-ce
sudo systemctl status docker
check: Running state

Ejecutar aplicacion :

aws sam init
aws sam build
sam deploy --guided --capabilities CAPABILITY_IAM

Validar estado:

Nota: Validar estado en la consola de CloudFront en EVENTS y OUPUTS
Esta aplicacion deberia exponer una url apigateway, copiela y peguela en el navegador
la salida debe ser un "hellos world" en JSON